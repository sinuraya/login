#!/usr/bin/env php
<?php

/*
 * This file is part of the Slim API skeleton package
 *
 * Copyright (c) 2016-2017 Mika Tuupola
 *
 * Licensed under the MIT license:
 *   http://www.opensource.org/licenses/mit-license.php
 *
 * Project home:
 *   https://github.com/tuupola/slim-api-skeleton
 *
 */

date_default_timezone_set("UTC");

#error_reporting(E_ALL & ~E_NOTICE & ~E_WARNING);

require __DIR__ . "/../vendor/autoload.php";

$dotenv = new Dotenv\Dotenv(__DIR__ . "/..");
$dotenv->load();

/* Setup Slim */
$app = new Slim\App();
$container = $app->getContainer();

require __DIR__ . "/../config/dependencies.php";

use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;

$console = new Application();

$console
    ->register("migrate")
    ->setDescription("Migrate database tables")
    ->setCode(function (InputInterface $input, OutputInterface $output) use ($container) {
        print "Migrating database.\n";
        // $container["spot"]->mapper("App\Todo")->migrate();
        $container["spot"]->mapper("App\User")->migrate();

        $container["spot"]->mapper("App\User")->query("
            drop table if exists `auth_assignment`;
            drop table if exists `auth_item_child`;
            drop table if exists `auth_item`;
            drop table if exists `auth_rule`;

            create table `auth_rule`
            (
               `name`                 varchar(64) not null,
               `data`                 blob,
               `created_at`           integer,
               `updated_at`           integer,
                primary key (`name`)
            ) engine InnoDB;

            create table `auth_item`
            (
               `name`                 varchar(64) not null,
               `type`                 smallint not null,
               `description`          text,
               `rule_name`            varchar(64),
               `data`                 blob,
               `created_at`           integer,
               `updated_at`           integer,
               primary key (`name`),
               foreign key (`rule_name`) references `auth_rule` (`name`) on delete set null on update cascade,
               key `type` (`type`)
            ) engine InnoDB;

            create table `auth_item_child`
            (
               `parent`               varchar(64) not null,
               `child`                varchar(64) not null,
               primary key (`parent`, `child`),
               foreign key (`parent`) references `auth_item` (`name`) on delete cascade on update cascade,
               foreign key (`child`) references `auth_item` (`name`) on delete cascade on update cascade
            ) engine InnoDB;

            create table `auth_assignment`
            (
               `item_name`            varchar(64) not null,
               `user_id`              varchar(64) not null,
               `created_at`           integer,
               primary key (`item_name`, `user_id`),
               foreign key (`item_name`) references `auth_item` (`name`) on delete cascade on update cascade
            ) engine InnoDB;");
    });

$console->run();
